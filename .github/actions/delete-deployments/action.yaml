name: Delete GitHub deployments
description: Delete all completed or inactive GitHub deployments
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v7
      with:
        script: |

          const completedStatuses = ["error", "failure", "success"];
          const inactiveStatuses = ["inactive"];

          // For all deployments...
          const deployments = await github.paginate(github.rest.repos.listDeployments, {
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          console.log(`found ${deployments.length} deployments`);

          await Promise.all(
            deployments.map(async (deployment) => {
              const statuses = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
              });

              const isCompleted = statuses.data.some((status) => completedStatuses.includes(status.state));
              const isInactive = statuses.data.some((status) => inactiveStatuses.includes(status.state));

              if (!isCompleted) {
                console.log(`skipping deployment ${deployment.id}`);
                return Promise.resolve();
              }

              // ...ensure status is inactive...
              if (!isInactive) {
                console.log(`inactivating and removing deployment ${deployment.id}`);
                await github.rest.repos.createDeploymentStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                  state: 'inactive'
                });
              } else {
                console.log(`removing deployment ${deployment.id}`);
              }

              // ...then delete the deployment
              return github.rest.repos.deleteDeployment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
            })
          );
